{"version":3,"sources":["validateInfo.js","useForm.js","FormSignup.js","FormSuccess.js","Form.js","App.js","index.js"],"names":["validateInfo","values","errors","batchDate","trim","truckNumber","batcherName","batchStartTime","orderNumber","customer","recipeCode","site","truckDriver","orderQty","productionQty","withLoad","axios","require","useForm","callback","validate","useState","setValues","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","e","target","name","value","handleSubmit","preventDefault","post","then","response","console","log","catch","error","FormSignup","submitForm","className","onSubmit","noValidate","style","display","type","onChange","username","email","password","password2","FormSuccess","src","alt","Form","isSubmitted","setIsSubmitted","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e0075d0.chunk.js","sourcesContent":["export default function validateInfo(values) {\n  let errors = {};\n\n  if (!values.batchDate.trim()) {\n    errors.batchDate = 'required';\n  }\n   if (!values.truckNumber) {\n    errors.truckNumber = 'Required';\n  }\n\n  if (!values.batcherName) {\n    errors.batcherName = 'Required';\n  } \n   if (!values.batchStartTime){\n    errors.batchStartTime = 'Required';\n  }\n  if (!values.orderNumber) {\n    errors.orderNumber = 'Required';\n  } \n   if (values.customer) {\n    errors.customer = 'Required';\n  }\n\n  if (!values.recipeCode) {\n    errors.recipeCode = 'Required';\n  } \n  if (!values.site) {\n    errors.site = 'Required';\n  }\n  if (!values.truckDriver) {\n    errors.truckDriver = 'Required';\n  }\n  if (!values.orderQty) {\n    errors.orderQty = 'Required';\n  }\n  if (!values.productionQty) {\n    errors.productionQty = 'Required';\n  }\n  if (!values.withLoad) {\n    errors.withLoad = 'Required';\n  }\n  return errors;\n}\n","import { useState, useEffect } from 'react';\nconst axios = require('axios');\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    batchDate: '',\n    batcherName: '',\n    orderNumber: '',\n    customer: '',\n    batchStartTime: '',\n    recipeCode: '',\n    site: '',\n    truckNumber: '',\n    truckDriver: '',\n    orderQty: '',\n    productionQty: '',\n    withLoad: '',\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    axios.post('/getPDF',values).then(response => {\n      console.log(response);\n    }).catch(error =>{\n      console.log(error);\n    })\n  };\n\n  useEffect(\n    () => {\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n        callback();\n      }\n    },\n    [errors]\n  );\n\n  return { handleChange, handleSubmit, values, errors };\n};\n\nexport default useForm;\n","import React from 'react';\nimport validate from './validateInfo';\nimport useForm from './useForm';\nimport './Form.css';\n\nconst FormSignup = ({ submitForm }) => {\n  const { handleChange, handleSubmit, values, errors } = useForm(\n    submitForm,\n    validate\n  );\n\n \n  return (\n    <div className='form-content-right'>\n      <form onSubmit={handleSubmit} className='form' noValidate>\n        <h1>\n          Generate PDF\n        </h1>\n        <div style={{ display: \"flex\" }}>\n        <div className='form-inputs'>\n          <label className='form-label'>Batch Date</label>\n          <input\n            className='form-input'\n            type='date'\n            name='batchDate'\n            value={values.batchDate}\n            onChange={handleChange}\n          />\n          {errors.username && <p>{errors.username}</p>}\n        </div>\n        <div className='form-inputs'>\n          <label className='form-label'>Batcher Name</label>\n          <input\n            className='form-input'\n            type='email'\n            name='batcherName'\n            value={values.batcherName}\n            onChange={handleChange}\n          />\n          {errors.email && <p>{errors.email}</p>}\n        </div>\n        <div className='form-inputs'>\n          <label className='form-label'>Order Number</label>\n          <input\n            className='form-input'\n            type='text'\n            name='orderNumber'\n            value={values.orderNumber}\n            onChange={handleChange}\n          />\n          {errors.password && <p>{errors.password}</p>}\n        </div>\n        <div className='form-inputs'>\n          <label className='form-label'>Customer</label>\n          <input\n            className='form-input'\n            type='text'\n            name='customer'\n            value={values.customer}\n            onChange={handleChange}\n          />\n          {errors.password2 && <p>{errors.password2}</p>}\n    \n        </div>\n        </div>\n        <div style={{ display: \"flex\" }}>\n        <div className='form-inputs'>\n          <label className='form-label'>Batch Start Time</label>\n          <input\n            className='form-input'\n            type='text'\n            name='batchStartTime'\n            value={values.batchStartTime}\n            onChange={handleChange}\n          />\n          {errors.username && <p>{errors.username}</p>}\n        </div>\n        <div className='form-inputs'>\n          <label className='form-label'>Recipe Code</label>\n          <input\n            className='form-input'\n            type='select'\n            name='recipeCode'\n            value={values.recipeCode}\n            onChange={handleChange}\n          />\n          {errors.email && <p>{errors.email}</p>}\n        </div>\n        <div className='form-inputs'>\n          <label className='form-label'>Site</label>\n          <input\n            className='form-input'\n            type='text'\n            name='site'\n            value={values.site}\n            onChange={handleChange}\n          />\n          {errors.password && <p>{errors.password}</p>}\n        </div>\n        <div className='form-inputs'>\n          <label className='form-label'>Truck Number</label>\n          <input\n            className='form-input'\n            type='text'\n            name='truckNumber'\n            value={values.truckNumber}\n            onChange={handleChange}\n          />\n          {errors.password2 && <p>{errors.password2}</p>}\n    \n        </div>\n        </div>\n        <div style={{ display: \"flex\" }}>\n        <div className='form-inputs'>\n          <label className='form-label'>Truck Driver</label>\n          <input\n            className='form-input'\n            type='text'\n            name='truckDriver'\n            value={values.truckDriver}\n            onChange={handleChange}\n          />\n          {errors.username && <p>{errors.username}</p>}\n        </div>\n        <div className='form-inputs'>\n          <label className='form-label'>Ordered Qty</label>\n          <input\n            className='form-input'\n            type='text'\n            name='orderQty'\n            value={values.orderQty}\n            onChange={handleChange}\n          />\n          {errors.email && <p>{errors.email}</p>}\n        </div>\n        <div className='form-inputs'>\n          <label className='form-label'> Production Qty</label>\n          <input\n            className='form-input'\n            type='text'\n            name='productionQty'\n            value={values.productionQty}\n            onChange={handleChange}\n          />\n          {errors.password && <p>{errors.password}</p>}\n        </div>\n      \n        </div>\n        <div style={{ display: \"flex\" }}>\n        <div className='form-inputs'>\n          <label className='form-label'>With This Load</label>\n          <input\n            className='form-input'\n            type='text'\n            name='withLoad'\n            value={values.withLoad}\n            onChange={handleChange}\n          />\n          {errors.username && <p>{errors.username}</p>}\n        </div>\n       \n        </div>\n        <button className='form-input-btn' type='submit'>\n          Create PDF\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormSignup;\n","import React from 'react';\nimport './Form.css';\n\nconst FormSuccess = () => {\n  return (\n    <div className='form-content-right'>\n      <h1 className='form-success'>Successfully Created PDF</h1>\n      <img className='form-img-2' src='img/img-3.svg' alt='success-image' />\n    </div>\n  );\n};\n\nexport default FormSuccess;\n","import React, { useState } from 'react';\nimport './Form.css';\nimport FormSignup from './FormSignup';\nimport FormSuccess from './FormSuccess';\n\nconst Form = () => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  function submitForm() {\n    setIsSubmitted(true);\n  }\n  return (\n    <>\n      <div className='form-container'>\n        <span className='close-btn'>×</span>\n        <div className='form-content-left'>\n          <img className='form-img' src='img/img-2.svg' alt='spaceship' />\n        </div>\n        {!isSubmitted ? (\n          <FormSignup submitForm={submitForm} />\n        ) : (\n          <FormSuccess />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport './App.css';\nimport Form from './Form';\n\nfunction App() {\n  return <Form />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}